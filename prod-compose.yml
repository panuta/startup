version: '2'

volumes:
  postgres_data: {}
  caddy: {}

services:
  postgres:
    restart: always
    build:
      context: .
      dockerfile: compose/postgres/Dockerfile
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - $HOME/postgresql_baks/:/backups
    env_file: ./env/prod.env

nginx:
  image: nginx:stable-alpine
  labels:
      com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy: "true"
  restart: always
  ports:
    - "80:80"
    - "443:443"
  volumes:
    - ${NGINX_FILES_PATH:-./data}/conf.d:/etc/nginx/conf.d
    - ${NGINX_FILES_PATH:-./data}/vhost.d:/etc/nginx/vhost.d
    - ${NGINX_FILES_PATH:-./data}/html:/usr/share/nginx/html
    - ${NGINX_FILES_PATH:-./data}/certs:/etc/nginx/certs:ro

nginx-gen:
  image: jwilder/docker-gen
  command: -notify-sighup ${NGINX_WEB:-nginx-web} -watch -wait 5s:30s /etc/docker-gen/templates/nginx.tmpl /etc/nginx/conf.d/default.conf
  restart: always
  volumes:
    - ${NGINX_FILES_PATH:-./data}/conf.d:/etc/nginx/conf.d
    - ${NGINX_FILES_PATH:-./data}/vhost.d:/etc/nginx/vhost.d
    - ${NGINX_FILES_PATH:-./data}/html:/usr/share/nginx/html
    - ${NGINX_FILES_PATH:-./data}/certs:/etc/nginx/certs:ro
    - /var/run/docker.sock:/tmp/docker.sock:ro
    - ./nginx.tmpl:/etc/docker-gen/templates/nginx.tmpl:ro

nginx-letsencrypt:
  image: jrcs/letsencrypt-nginx-proxy-companion
  restart: always
  volumes:
    - ${NGINX_FILES_PATH:-./data}/conf.d:/etc/nginx/conf.d
    - ${NGINX_FILES_PATH:-./data}/vhost.d:/etc/nginx/vhost.d
    - ${NGINX_FILES_PATH:-./data}/html:/usr/share/nginx/html
    - ${NGINX_FILES_PATH:-./data}/certs:/etc/nginx/certs:rw
    - /var/run/docker.sock:/var/run/docker.sock:ro
  environment:
    NGINX_DOCKER_GEN_CONTAINER: nginx-gen
    NGINX_PROXY_CONTAINER: nginx

  django:
    restart: always
    build:
      context: .
      dockerfile: compose/django/production/Dockerfile
    depends_on:
      - postgres
    volumes:
      - .:/app
    env_file: ./env/prod.env
    command: /gunicorn.sh

  # caddy:
  #   restart: always
  #   build:
  #     context: .
  #     dockerfile: compose/caddy/Dockerfile
  #   depends_on:
  #     - django
  #   ports:
  #     - "80:80"
  #     - "443:443"
  #   volumes:
  #     - ./staticfiles:/var/www/static
  #     - ./app/media:/var/www/media
  #     - caddy:/root/.caddy
  #   env_file: ./env/prod.env

  redis:
    image: redis:latest
